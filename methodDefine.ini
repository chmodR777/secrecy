<%@ page import="java.util.*" %>
<%@ page import="com.syntc.util.*" %>
<%@ page import="com.syntc.constants.CommonConstants" %>
<%!
  public void addMenu(List list, Map map, HttpServletRequest request) throws Exception
    {
        //判断map的url属性是否为空，若为空则认为是最终子菜单
        if (!"".equals(map.get("url")) && map.get("url") != null)
        {
            
            //判断权限号是否被允许
            String power = (String) map.get("power");
            boolean b =  true; //是否可以访问
           
	    //允许访问
            if (b)
            {
                map.put("display", "true"); //若权限号被允许则设置display为true，并添加到list中

                list.add(map);
                //将父菜单的display属性设置为true
                String father = (String) map.get("father");
                if (!"".equals(father) && father != null)
                {
                    setParentDisplay(list, father);
                }
            }
        } 
        //非最终子菜单
        else
        {
            if ("".equals(map.get("father"))) //默认顶级菜单的display为true
                map.put("display", "true");
            //若url为空则直接添加到list中

            list.add(map);
        }
    }

    //用于设置父菜单的display属性为true
    public void setParentDisplay(List list, String father)
    {
        Iterator it = list.listIterator();
        Map map = null;

        while (it.hasNext())
        { //循环list中的元素
            map = (HashMap) it.next();
            if (father.equals(map.get("name")))
            { //判断所获得的元素的name属性是否与指定的值相等

                if (map.get("display") == null)
                {
                    map.put("display", "true");
                    father = (String) map.get("father");
                    if (!"".equals(father) && father != null)
                    {
                        setParentDisplay(list, father);
                    }
                }
                break;
            }
        }
    }

    //将无效的元素移除
    public void removeDisplay(List list)
    {
        Iterator it = list.listIterator();
        Map map = null;

        while (it.hasNext())
        { //循环list中的元素
            map = (HashMap) it.next();
            if (map.get("display") == null)
            {
                it.remove();
            }
        }
    }

    //将列表打印出来

    public String MenuPrint(List list)
    {
        Map map = null;
        String father = "";
        String tmp = "";
        int i = 0;
        int j = 0;

	if(list != null && list.size() != 0){

		Iterator it = list.listIterator();

        	while (it.hasNext())
        	{
		    map = (Map) it.next();
	            while (!father.equals(map.get("father")))
	            {
	                tmp = tmp + "</table>\n";
	                if (!"".equals(map.get("father")))
	                {
	                    tmp = tmp + "</td>\n</tr>\n";
	                }
	                father = findFather(list, father);
	                i--;
	            }
	            if ("".equals(map.get("father")))
	            {
	                j++;
	                tmp = tmp + "<table width=\"150\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n";
	                tmp = tmp + "<tr>\n";
	                tmp = tmp
	                        + "<td align=\"left\"><a style=\"cursor:hand\" onclick=\"openclose(img_"
	                        + map.get("name")
	                        + ","
	                        + map.get("name")
	                        + ");\"><img src=\"images/menus/folder16.gif\" align=\"left\" border=\"0\" name=\"img_"
	                        + map.get("name")
	                        + "\">"
	                        + map.get("text")
	                        + "</a></td>\n";
	                tmp = tmp + "</tr>\n";
	                i++;
	                tmp = tmp + "<tr align=\"right\" valign=\"top\">\n<td>\n";
	                tmp = tmp + "<table id=\"" + map.get("name") + "\" style=\"display:none\" width=\"" + ((10 - i) * 15) 	+ "\" 	border=\"0\" cellspacing=\"1\" cellpadding=\"1\">\n";
	                father = (String) map.get("name");
	            } else if (father.equals(map.get("father")))
	            {
	                tmp = tmp + "<tr>\n";
	                if ("".equals(map.get("url")) || map.get("url") == null)
	                {
	                    j++;
	                    i++;
	                    tmp = tmp
	                            + "<td align=\"left\"><a style=\"cursor:hand\" onclick=\"openclose(img_"
	                            + map.get("name")
	                            + ","
	                            + map.get("name")
	                            + ");\"><img src=\"images/menus/folder16.gif\" align=\"left\" border=\"0\" name=\"img_"
	                            + map.get("name")
	                            + "\">"
	                            + map.get("text")
	                            + "</a></td>\n";
	                    tmp = tmp + "</tr>\n";
	                    tmp = tmp + "<tr align=\"right\" valign=\"top\">\n";
	                    tmp = tmp + "<td>\n";
	                    tmp = tmp + "<table id=\"" + map.get("name") + "\" style=\"display:none\" width=\"" + ((10 - i) * 	15) + 	"\" border=\"0\" cellspacing=\"1\" cellpadding=\"1\">\n";
	                    father = (String) map.get("name");
	                } else
	                {
	                    tmp = tmp
	                            + "<td align=\"left\"><a><img src=\"images/menus/mag16.gif\" align=\"left\" border=\"0\" 	name=\"img_"
	                            + map.get("name")
	                            + "\"></a><a href=\""
	                            + map.get("url")
	                            + "\" target=\"mainFrame\" onclick=\"return setSelMenu(this);\">"
	                            + map.get("text")
	                            + "</a></td>\n";
	                    tmp = tmp + "</tr>\n";
	                }
	            }
	        }
	        while (!"".equals(father))
	        {
	            tmp = tmp + "</table>\n</td>\n</tr>\n";
	            father = findFather(list, father);
	        }
	        tmp = tmp + "</table>\n";
	}
        return tmp;
    }

    //用于查找上一级父菜单
    public String findFather(List list, String father)
    {
        Iterator it = list.listIterator();
        Map map = null;
        while (it.hasNext())
        {
            map = (Map) it.next();
            if (father.equals(map.get("name")))
            {
                father = (String) map.get("father");
                return father;
            }
        }
        return null;
    }

	//得到可浏览财富库列表
	public void getMenuLibList(List list, 
			   Map map, 
			   HttpServletRequest request,
			   ResultObj p_res) throws Exception
	{
		//组织财富库
		if(p_res != null)
		{
			//循环画出财富库菜单			
			for(int i=1;i<p_res.getRows();i++)
			{
				String str_name = "level_" + String.valueOf(i);
				//菜单名称
				String str_text = p_res.getCell("NAME",i);
				//库ID
				String str_libid = p_res.getCell("ID",i);
				//库类型
				String str_libtype = p_res.getCell("LIBTYPECODE",i);
				//菜单链接
				String str_url = "ForwardSubMenu.do?isNeedInitSQL=true&mtype=3&stype=2&ltype=" + str_libtype + "&pid=" + str_libid;
				//父结点名
				String str_father = "levelMain_01";
				
				map = new HashMap();
				map.put("name", str_name);
				map.put("text", str_text);
				map.put("url", str_url);
				map.put("power", "");
				map.put("father", str_father);
				try
				{
					addMenu(list, map, request);
				}
				catch(Exception e)
				{
				}
			}
		}
	}

	//得到可操作功能列表
	public void getMenuFuncList(List list, 
			   Map map, 
			   HttpServletRequest request,
			   List p_funclist,
			   ResultObj p_res) throws Exception
	{
		Iterator it = p_funclist.listIterator();
		Map funmap = null;

		//可操作功能列表不为空
		if(p_res != null)
		{
			while (it.hasNext())
			{
				funmap = (Map) it.next();

				String str_level = (String)funmap.get("name");

				String[] str_levelcode = str_level.split("_");
				
				boolean isHasPerm = false;
				//循环画出财富库菜单			
				for(int i=1;i<p_res.getRows();i++)
				{
					//功能菜单ID
					String str_code = p_res.getCell("MODULECODE",i);
					//功能菜单CAPTION
					String str_caption = p_res.getCell("CAPTION",i);
					
					if(str_levelcode[1].length() == 4)
					{
						if(str_code.length() < 4)
						{
							continue;
						}
						else
						{
							String str_temp = str_code.substring(0,4);
							if(str_temp.equals(str_levelcode[1]))
							{
								isHasPerm = true;
								
								break;
							}		
						}
					}
					else if(str_levelcode[1].length() == 6)
					{
						if(str_code.length() < 6)
						{
							continue;
						}
						else
						{
							if(str_code.equals(str_levelcode[1]))
							{
								isHasPerm = true;
								
								break;
							}		
						}
					}
					else
					{
						String str_temp = str_code.substring(0,2);
						if(str_temp.equals(str_levelcode[1])) 
						{
							isHasPerm = true;

							break;
						}
					}
				}

				if(isHasPerm)
				{

					map = new HashMap();
					map.put("name", (String)funmap.get("name"));
					map.put("text", (String)funmap.get("text"));
					map.put("url",  (String)funmap.get("url"));
					map.put("power", (String)funmap.get("power"));
					map.put("father", (String)funmap.get("father"));
					try
					{
						addMenu(list, map, request);
					}
					catch(Exception e)
					{
					}

				}
			}
		}
	}

%>
<script language="JavaScript">
	function openclose(param1,param)
	{
          if(param.style.display == "none")
          {
            param.style.display="";
            param1.src="images/menus/myfile16.gif";
          }
          else
          {
            param.style.display="none";
            param1.src="images/menus/folder16.gif";
          }
	}

	var menu_save = null;
	var color_save = null;
function setSelMenu(obj)
{
    if( menu_save != null ){
	    menu_save.style.backgroundColor=color_save;
	    menu_save.style.color="#000000";
    }

    color_save = obj.style.backgroundColor;
    
    obj.style.backgroundColor="#000066";
    obj.style.color="#FFFFFF";
    
    menu_save = obj;

    return true;
}
</script>